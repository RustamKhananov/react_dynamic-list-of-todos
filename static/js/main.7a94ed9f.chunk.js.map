{"version":3,"sources":["api.tsx","TodoList.tsx","App.tsx","index.tsx"],"names":["getUsers","a","users","fetch","then","responce","json","getTodos","todos","TodoList","props","map","todo","key","id","title","completed","toString","user","name","App","state","preparedTodos","todosFromServer","usersFromServer","isButtonVisible","isButtonDisabled","buttonText","sortedBy","preparedTodosGenerate","length","setState","prevState","find","userId","handleLoadButtonClick","Promise","all","dataFromServer","handleSortByTitleButtonClick","sort","b","localeCompare","handleSortByNameButtonClick","handleSortByCompletedButtonClick","this","type","disabled","className","classNames","visible","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a94ed9f.chunk.js","sourcesContent":["\nexport const getUsers = async () => {\n  const users = fetch('./api/users.json').then(responce => responce.json());\n\n  return users;\n};\n\nexport const getTodos = async () => {\n  const todos = fetch('./api/todos.json').then(responce => responce.json());\n\n  return todos;\n};\n","import React from 'react';\n\nimport { TodoListProps } from './types';\n\n\nconst TodoList: React.FC<TodoListProps> = (props: TodoListProps) => {\n  return (\n    <ul>\n      {props.todos.map((todo) => (\n        <li\n          key={todo.id}\n        >\n          <p>\n            <strong>Description: </strong>\n            {todo.title}\n          </p>\n          <p>\n            <strong>Completed: </strong>\n            {todo.completed.toString()}\n          </p>\n          <p>\n            <strong>User: </strong>\n            {todo.user.name}\n          </p>\n        </li>\n      ))}\n    </ul>\n\n  );\n};\n\nexport default TodoList;\n","import React from 'react';\nimport classNames from 'classnames';\nimport './App.css';\n\nimport { getTodos, getUsers } from './api';\nimport TodoList from './TodoList';\nimport { AppState, User, Todo } from './types';\n\n\nclass App extends React.Component {\n  state: AppState = {\n    preparedTodos: [],\n    todosFromServer: [],\n    usersFromServer: [],\n    isButtonVisible: true,\n    isButtonDisabled: false,\n    buttonText: 'Load',\n    sortedBy: '',\n  };\n\n\n  preparedTodosGenerate = () => {\n    if (this.state.todosFromServer.length === 0\n      || this.state.usersFromServer.length === 0) {\n      return;\n    }\n\n    this.setState((prevState: AppState) => {\n      return (\n        {\n          preparedTodos: prevState.todosFromServer.map((todo: Todo) => {\n            return ({\n              ...todo,\n              user: (prevState.usersFromServer.find((user: User) => (user.id === todo.userId))),\n            });\n          }),\n          isButtonVisible: false,\n        }\n      );\n    });\n  };\n\n  handleLoadButtonClick = () => {\n    this.setState({\n      isButtonDisabled: true,\n      buttonText: 'Loading...',\n    });\n\n    Promise.all([getTodos(), getUsers()])\n      .then((dataFromServer) => {\n        this.setState({\n          todosFromServer: dataFromServer[0],\n          usersFromServer: dataFromServer[1],\n        });\n        this.preparedTodosGenerate();\n      });\n  };\n\n\n  handleSortByTitleButtonClick = () => {\n    this.setState((prevState: AppState) => ({\n      preparedTodos: [...prevState.preparedTodos]\n        .sort((a: Todo, b: Todo) => a.title.localeCompare(b.title)),\n      sortedBy: 'Sorted by Description',\n    }));\n  };\n\n  handleSortByNameButtonClick = () => {\n    this.setState((prevState: AppState) => ({\n      preparedTodos: [...prevState.preparedTodos]\n        .sort((a: Todo, b: Todo) => a.user.name.localeCompare(b.user.name)),\n      sortedBy: 'Sorted by Name',\n    }));\n  };\n\n  handleSortByCompletedButtonClick = () => {\n    this.setState((prevState: AppState) => ({\n      preparedTodos: [...prevState.preparedTodos]\n        .sort((a: Todo, b: Todo) => ((a.completed.toString()\n          .localeCompare(b.completed.toString())))),\n      sortedBy: 'Sorted by Complete',\n    }));\n  };\n\n  render() {\n    const { isButtonVisible, isButtonDisabled } = this.state;\n\n    return (\n      <>\n        <h1>Dynamic list of TODOs</h1>\n        <button\n          type=\"button\"\n          disabled={isButtonDisabled}\n          className={classNames({ visible: isButtonVisible }, { 'un-visible': !isButtonVisible })}\n          onClick={this.handleLoadButtonClick}\n        >\n          {this.state.buttonText}\n        </button>\n        <button\n          className={classNames({ visible: !isButtonVisible }, { 'un-visible': isButtonVisible })}\n          type=\"button\"\n          onClick={this.handleSortByNameButtonClick}\n        >\n          Sort by user name\n        </button>\n        <button\n          className={classNames({ visible: !isButtonVisible }, { 'un-visible': isButtonVisible })}\n          type=\"button\"\n          onClick={this.handleSortByTitleButtonClick}\n        >\n          Sort by description\n        </button>\n        <button\n          className={classNames({ visible: !isButtonVisible }, { 'un-visible': isButtonVisible })}\n          type=\"button\"\n          onClick={this.handleSortByCompletedButtonClick}\n        >\n          Sort by complited\n        </button>\n\n        <p>{this.state.sortedBy}</p>\n        <TodoList\n          todos={this.state.preparedTodos}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}